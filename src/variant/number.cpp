#include "slw/variant/number.hpp"
#include "lua.hpp"

////////////////////////////////////////////////////////////
/// number constructors
////////////////////////////////////////////////////////////
#include "variant/variant_ctors.hpp"
variant_ctors(slw::number)

////////////////////////////////////////////////////////////
/// number equality operators
////////////////////////////////////////////////////////////
#include "variant/variant_op_eq.hpp"
variant_op_eq(slw::number, ==)
variant_op_eq(slw::number, !=)

////////////////////////////////////////////////////////////
/// number deref operator
////////////////////////////////////////////////////////////
#include "variant/variant_numeric_dereference.hpp"
variant_numeric_op_deref(slw::number, lua_tonumberx)

////////////////////////////////////////////////////////////
/// number assign operator
////////////////////////////////////////////////////////////
#include "variant/variant_op_assign.hpp"
variant_op_assign(slw::number, lua_pushnumber)

slw::reference slw::number::get()
{
    return M_ref;
}

slw::number::operator expected_value_type()
{ return operator *();
}
